type AuctionCancelled @entity(immutable: true) {
  id: Bytes!
  auctionId: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type BalanceUpdated @entity(immutable: true) {
  id: Bytes!
  accountOf: Bytes! # address
  tokenAddress: Bytes! # address
  newBalance: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type BidPlaced @entity(immutable: true) {
  id: Bytes!
  auctionId: BigInt! # uint256
  totalAmount: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type ClaimAuctionNFT @entity(immutable: true) {
  id: Bytes!
  auctionId: BigInt! # uint256
  claimer: Bytes! # address
  recipient: Bytes! # address
  amount: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type ClaimFunds @entity(immutable: true) {
  id: Bytes!
  accountOf: Bytes! # address
  tokenAddress: Bytes! # address
  newBalance: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type ClaimSaleNFTs @entity(immutable: true) {
  id: Bytes!
  Marketplace_id: BigInt! # uint256
  owner: Bytes! # address
  amount: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type NewAuction @entity(immutable: true) {
  id: Bytes!
  auctionId: BigInt! # uint256
  newAuction_id: BigInt! # uint128
  newAuction_nftId: BigInt! # uint128
  newAuction_isERC721: Boolean! # bool
  newAuction_nftAddress: Bytes! # address
  newAuction_owner: Bytes! # address
  newAuction_currency: Bytes! # address
  newAuction_startTime: BigInt! # uint256
  newAuction_endTime: BigInt! # uint256
  newAuction_reservePrice: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type OwnershipTransferred @entity(immutable: true) {
  id: Bytes!
  previousOwner: Bytes! # address
  newOwner: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Purchase @entity(immutable: true) {
  id: Bytes!
  saleId: BigInt! # uint256
  purchaser: Bytes! # address
  recipient: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type SaleCancelled @entity(immutable: true) {
  id: Bytes!
  saleId: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type SaleCreated @entity(immutable: true) {
  id: Bytes!
  Marketplace_id: BigInt! # uint256
  nftAddress: Bytes! # address
  nftID: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}
type ApprovalForAll @entity(immutable: true) {
  id: Bytes!
  account: Bytes! # address
  operator: Bytes! # address
  approved: Boolean! # bool
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type CreatureAccessoryOwnershipTransferred @entity(immutable: true) {
  id: Bytes!
  previousOwner: Bytes! # address
  newOwner: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Paused @entity(immutable: true) {
  id: Bytes!
  account: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type TransferBatch @entity(immutable: true) {
  id: Bytes!
  operator: Bytes! # address
  from: Bytes! # address
  to: Bytes! # address
  ids: [BigInt!]! # uint256[]
  values: [BigInt!]! # uint256[]
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type TransferSingle @entity(immutable: true) {
  id: Bytes!
  operator: Bytes! # address
  from: Bytes! # address
  to: Bytes! # address
  CreatureAccessory_id: BigInt! # uint256
  value: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type URI @entity(immutable: true) {
  id: Bytes!
  value: String! # string
  CreatureAccessory_id: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Unpaused @entity(immutable: true) {
  id: Bytes!
  account: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}
